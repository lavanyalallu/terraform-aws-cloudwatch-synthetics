variable "schedule_expression" {
  description = "Schedule expression for canary"
  type        = string

  validation {
    condition     = can(regex("^(rate|cron)\\(.+\\)$", var.schedule_expression))
    error_message = "The schedule_expression must be a valid rate() or cron() expression."
  }
}

variable "endpoints" {
  description = "Map of endpoints for canary testing"
  type = map(object({
    url = string
  }))

  validation {
    condition     = length(var.endpoints) > 0
    error_message = "The endpoints map cannot be empty."
  }
}

variable "subnet_ids" {
  type        = list(string)
  default     = []
}

variable "security_group_ids" {
  type        = list(string)
  default     = []
}

variable "s3_artifact_bucket" {
  description = "Name of S3 bucket to store Canary artifacts. If empty, one will be created."
  type        = string
  default     = ""
}

variable "canary_handler" {
  description = "The handler for the canary script."
  type        = string
  default     = "pageLoadBlueprint.handler"

  validation {
    condition     = can(regex("^.+\\..+$", var.canary_handler))
    error_message = "The canary_handler must be in the format 'filename.handler'."
  }
}

variable "canary_runtime_version" {
  description = "The runtime version for the canary."
  type        = string
  default     = "syn-nodejs-puppeteer-6.1"

  validation {
    condition     = substr(var.canary_runtime_version, 0, 4) == "syn-"
    error_message = "The canary_runtime_version must start with 'syn-'."
  }
}

variable "start_canary" {
  description = "Whether to start the canary after creation."
  type        = bool
  default     = true
}
